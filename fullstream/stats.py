# AUTOGENERATED! DO NOT EDIT! File to edit: 01_stats.ipynb (unless otherwise specified).

__all__ = ['simple_nn_logpdf']

# Cell
import pyhf

pyhf.set_backend(pyhf.tensor.jax_backend())

import jax

# Cell
def simple_nn_logpdf(
    nn_pars, nn, pars, data, sig_data, bkg_data, bkg_uncerts, use_jax=False
):
    """Return pyhf.Model.logpdf for a simple two-bin model, containing a signal and background histogram created using hists_from_nn."""
    tensorlib, _ = pyhf.get_backend()

    sig_hist, bkg_hist = hists_from_nn(
        nn, nn_pars, sig_data, bkg_data, scale=True, use_jax=use_jax
    )

    spec = {
        "channels": [
            {
                "name": "singlechannel",
                "samples": [
                    {
                        "name": "signal",
                        "data": sig_hist,
                        "modifiers": [
                            {"name": "mu", "type": "normfactor", "data": None}
                        ],
                    },
                    {
                        "name": "background",
                        "data": bkg_hist,
                        "modifiers": [
                            {
                                "name": "uncorr_bkguncrt",
                                "type": "shapesys",
                                "data": bkg_hist,
                            }
                        ],
                    },
                ],
            }
        ]
    }
    model = pyhf.Model(spec)
    print(spec)
    data += model.config.auxdata
    data = tensorlib.astensor(data)
    pars = tensorlib.astensor(pars)

    # grad only defined for scalar output functions, not [scalar]
    return model.logpdf(pars, data)[0]